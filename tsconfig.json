{
	"compilerOptions": {
		/* Language and Environment */
		"target": "ES2022"
		/* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
		"lib": [
			"ES2022",
			"ESNext"
		]
		/* Specify a set of bundled library declaration files that describe the target runtime environment. */,
		"experimentalDecorators": true
		/* Enable experimental support for TC39 stage 2 draft decorators. */,
		"emitDecoratorMetadata": true
		/* Emit design-type metadata for decorated declarations in source files. */,
		/* Modules */
		"module": "commonjs"
		/* Specify what module code is generated. */,
		"moduleResolution": "node"
		/* Specify how TypeScript looks up a file from a given module specifier. */,
		/*    "rootDir": "./src",*/
		"rootDirs": [
			"./src/"
		]
		/* Allow multiple folders to be treated as one when resolving modules. */,
		"types": [
			"node",
			"express"
		],
		"typeRoots": [
			"./node_modules/@types",
			"./types/"
		]
		/* Specify multiple folders that act like './node_modules/@types'. */,
		"resolveJsonModule": true
		/* Enable importing .json files. */,
		/* JavaScript Support */
		"declaration": true,
		"declarationMap": true,
		/* Emit */
		"sourceMap": true
		/* Create source map files for emitted JavaScript files. */,
		"outDir": "./dist/"
		/* Specify an output folder for all emitted files. */,
		"removeComments": true
		/* Disable emitting comments. */,
		"importHelpers": true
		/* Allow importing helper functions from tslib once per project, instead of including them per-file. */,
		/* Interop Constraints */
		"esModuleInterop": true
		/* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
		"forceConsistentCasingInFileNames": true
		/* Ensure that casing is correct in imports. */,
		/* Type Checking */
		"strict": true,
		"strictNullChecks": true,
		"alwaysStrict": true,
		/* Enable all strict type-checking options. */
		"noImplicitAny": true
		/* Enable error reporting for expressions and declarations with an implied 'any' type. */,
		/* Completeness */
		"skipLibCheck": true,
		/* Skip type checking all .d.ts files. */
		"strictFunctionTypes": true,
		"strictPropertyInitialization": true,
		"noImplicitThis": true,
	},
	"include": [
		"types/**/*.ts",
		"@types/**/*.ts",
		"src/**/*.ts",
		"test/**/*.ts"
	]
}
